#!/bin/sh
ScriptFolder=$(dirname $(readlink -f "$0"))
ConfigPath="$ScriptFolder/autoban.conf"

RED='\033[1;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

# Retrieves a setting from the config file
readConfig()
{
	if [ ! -f "$ConfigPath" ]
	then
		>&2 echo "Missing config file"
		exit 1
	fi

	value=$(grep -x "$1=.*" "$ConfigPath" | tail -1 | cut -d"=" -f 2-)

	if [ -z "$value" ]
	then
		>&2 echo "Missing config entry for $1"
		exit 2
	fi

	# Prepend $ScriptFolder to a denypath value if it's given relative to the script folder
	if test "$1" = "denypath" && echo "$value" | grep -qEv "^(\.\.?|~)?/.*$"
	then
		printf "$ScriptFolder/"
	fi

	echo "$value"
}

# Tries to ban an IP
banIP()
{
	if tcpdmatch "$(readConfig unitname)" "$1" | grep -q 'access: *denied'
	then
		echo "${YELLOW}The session is outdated${NC}"
		return 0
	fi

	subnet="$(echo $1 | cut -d"." -f 1-3)."
	escSubnet="$(echo $subnet | sed 's/\./\\./g')"

	if test "$(readConfig bansubnets)" = "true" && grep -Eq "$escSubnet[0-9]{1,3}$" "$(readConfig denypath)"
	then
		echo "Banned Subnet	$subnet"
		echo "$(readConfig banunit): $subnet" >> "$(readConfig denypath)"
	else
		echo "Banned IP	$1"
		echo "$(readConfig banunit): $1" >> "$(readConfig denypath)"
	fi
}


dPath=$(readConfig denypath)
if test ! -f "$dPath"
then
	touch "$dPath"
	chmod 644 "$dPath"
fi

if test ! -r "$dPath" || test ! -w "$dPath"
then
	echo "${YELLOW}The deny file permissions aren't correct, trying to chmod...${NC}"

	if chmod u+wr "$dPath" && test -r "$dPath" && test -w "$dPath"
	then
		echo "Fixed permissions"
	else
		echo "${RED}The given deny file is unusable${NC}"
		exit
	fi
fi

journalctl -u "$(readConfig unitname)" -f --since "now" | while read i
do
	msg=$(echo "$i" | cut -d" " -f 6-)

	case $msg in
		"Failed password for root from "*)
			IP="$(echo $msg | cut -d" " -f 6)"
			Country="$(geoiplookup "$IP" | cut -d" " -f 4-)"

			echo "${RED}Detected root try from $IP ($Country)${NC}"
			banIP "$IP"
		;;
	esac
done
